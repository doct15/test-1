# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-07-15 17:08
from __future__ import unicode_literals

import base_utilities
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import lists.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalSocialProfileNote',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('note', models.TextField(blank=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical social profile note',
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTwitterProfile',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('avatar', models.TextField(max_length=100, null=True)),
                ('avatar_url', models.URLField(blank=True, max_length=2000, null=True)),
                ('banner', models.TextField(blank=True, max_length=100, null=True)),
                ('banner_url', models.URLField(blank=True, max_length=2000, null=True)),
                ('latest_photo', models.TextField(blank=True, max_length=100, null=True)),
                ('latest_photo_url', models.URLField(blank=True, max_length=2000, null=True)),
                ('latest_tweet', models.CharField(blank=True, max_length=255, null=True)),
                ('media_count', models.IntegerField(blank=True, null=True)),
                ('tweet_count', models.IntegerField(blank=True, null=True)),
                ('following_count', models.IntegerField(blank=True, null=True)),
                ('followers_count', models.IntegerField(blank=True, null=True)),
                ('listed_count', models.IntegerField(blank=True, null=True)),
                ('like_count', models.IntegerField(blank=True, null=True)),
                ('handle', models.CharField(blank=True, max_length=255)),
                ('bio', models.TextField(blank=True)),
                ('website', models.CharField(blank=True, max_length=2000, null=True)),
                ('verified', models.BooleanField(default=False)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('join_date', models.CharField(blank=True, max_length=255)),
                ('dob', models.CharField(blank=True, max_length=255)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical twitter profile',
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='SocialProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('active', models.BooleanField(default=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SocialProfileNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TwitterProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(null=True, storage=base_utilities.OverwriteStorage(), upload_to=lists.models.get_upload_path)),
                ('avatar_url', models.URLField(blank=True, max_length=2000, null=True)),
                ('banner', models.ImageField(blank=True, null=True, storage=base_utilities.OverwriteStorage(), upload_to=lists.models.get_upload_path)),
                ('banner_url', models.URLField(blank=True, max_length=2000, null=True)),
                ('latest_photo', models.ImageField(blank=True, null=True, storage=base_utilities.OverwriteStorage(), upload_to=lists.models.get_upload_path)),
                ('latest_photo_url', models.URLField(blank=True, max_length=2000, null=True)),
                ('latest_tweet', models.CharField(blank=True, max_length=255, null=True)),
                ('media_count', models.IntegerField(blank=True, null=True)),
                ('tweet_count', models.IntegerField(blank=True, null=True)),
                ('following_count', models.IntegerField(blank=True, null=True)),
                ('followers_count', models.IntegerField(blank=True, null=True)),
                ('listed_count', models.IntegerField(blank=True, null=True)),
                ('like_count', models.IntegerField(blank=True, null=True)),
                ('handle', models.CharField(blank=True, max_length=255)),
                ('bio', models.TextField(blank=True)),
                ('website', models.CharField(blank=True, max_length=2000, null=True)),
                ('verified', models.BooleanField(default=False)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('join_date', models.CharField(blank=True, max_length=255)),
                ('dob', models.CharField(blank=True, max_length=255)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['handle'],
            },
        ),
        migrations.CreateModel(
            name='Watchlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created', '-modified'],
            },
        ),
        migrations.AddField(
            model_name='socialprofilenote',
            name='watchlist',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='lists.Watchlist'),
        ),
        migrations.AddField(
            model_name='socialprofile',
            name='notes',
            field=models.ManyToManyField(blank=True, related_name='notes', to='lists.SocialProfileNote'),
        ),
        migrations.AddField(
            model_name='socialprofile',
            name='twitter',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lists.TwitterProfile'),
        ),
        migrations.AddField(
            model_name='socialprofile',
            name='watchlists',
            field=models.ManyToManyField(related_name='watchlists', to='lists.Watchlist'),
        ),
        migrations.AddField(
            model_name='historicalsocialprofilenote',
            name='watchlist',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lists.Watchlist'),
        ),
    ]
